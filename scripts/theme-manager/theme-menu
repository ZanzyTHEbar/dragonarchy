#!/bin/bash

# Use repo themes directory (aligned with theme-set)
THEMES_DIR="$(dirname "$0")/../../packages/themes/.config/themes"
CURRENT_THEME_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/current/theme"

if [[ -e "$CURRENT_THEME_DIR" ]]; then
  CURRENT_THEME_NAME=$(basename "$(readlink -f "$CURRENT_THEME_DIR")")
else
  CURRENT_THEME_NAME=""
fi

# Build themes list with pretty display names
mapfile -t themes < <(
  find "$THEMES_DIR" -mindepth 1 -maxdepth 1 \( -type d -o -type l \) 2>/dev/null | sort | while read -r path; do
    filename=$(basename "$path")
    display_name=$(echo "$filename" | sed -E 's/(^|-)([a-z])/\1\u\2/g; s/-/ /g')

    if [[ "$filename" == "$CURRENT_THEME_NAME" ]]; then
      echo "Current: $display_name"
    else
      echo "$display_name"
    fi
  done
)

# Show gum menu
selection=$(printf '%s\n' "${themes[@]}" | gum choose --header="Select a theme")

# Remove any extra text before converting back to filename
clean_selection=$(echo "$selection" | sed -E 's/^Current: //g')

# Convert to lowercase and dash-separated: "Tokyo Night" -> "tokyo-night"
selected_theme=$(echo "$clean_selection" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')

# Apply the selected theme
"$(dirname "$0")/theme-set" "$selected_theme"
