#!/bin/bash

# Get the directory of the script, resolving symlinks
SOURCE=${BASH_SOURCE[0]}
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPT_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

PATH="$PATH:$SCRIPT_DIR/theme-manager"

main_menu() {
  local options=("Theme" "Cursors" "Utilities" "Update" "Setup" "Power Menu" "Keybindings" "Font Menu" "Exit")
  choice=$(printf "%s\n" "${options[@]}" | gum choose --header="") || exit 0
  case "$choice" in
  Theme) theme_menu ;;
  Cursors)
    "$SCRIPT_DIR/theme-manager/cursors/cursor-menu"
    main_menu
    ;;
  Utilities) utilities_menu ;;
  Update)
    "$SCRIPT_DIR/install/update.sh"
    ack_command
    main_menu
    ;;
  Setup)
    "$SCRIPT_DIR/../setup.sh"
    ack_command
    main_menu
    ;;
  "Power Menu")
    power-menu
    main_menu
    ;;
  "Keybindings")
    keybindings-menu
    main_menu
    ;;
  "Font Menu")
    font-menu
    main_menu
    ;;
  Exit) clear && exit 0 ;;
  esac
}

utilities_menu() {
  local options=("NFS" "Web Apps" "Docker DBs" "Secrets" "Add Migration" "Netbird" "Back")
  choice=$(printf "%s\n" "${options[@]}" | gum choose --header="Utilities") || main_menu
  case "$choice" in
  NFS)
    "$SCRIPT_DIR/utilities/nfs.sh"
    ack_command
    utilities_menu
    ;;
  "Web Apps")
    "$SCRIPT_DIR/utilities/web-apps.sh"
    ack_command
    utilities_menu
    ;;
  "Docker DBs")
    "$SCRIPT_DIR/utilities/docker-dbs.sh"
    ack_command
    utilities_menu
    ;;
  Secrets)
    "$SCRIPT_DIR/utilities/secrets.sh"
    ack_command
    utilities_menu
    ;;
  "Add Migration")
    "$SCRIPT_DIR/utilities/add-migration.sh"
    ack_command
    utilities_menu
    ;;
  Netbird)
    "$SCRIPT_DIR/utilities/netbird-install.sh"
    ack_command
    utilities_menu
    ;;
  Back) main_menu ;;
  esac
}

theme_menu() {
  local options=("Pick" "Install" "Update" "Remove" "Change Background" "Back")
  choice=$(printf "%s\n" "${options[@]}" | gum choose --header="Theme") || main_menu
  case "$choice" in
  Pick)
  theme-menu
    ack_command
    main_menu
    ;;
  Install)
  install_theme_prompt
    ack_command
    theme_menu
    ;;
  Update)
  theme-update
    ack_command
    theme_menu
    ;;
  Remove)
  remove_theme_prompt
    ack_command
    theme_menu
    ;;
  "Change Background")
    theme-bg-menu
    ack_command
    theme_menu
    ;;
  Back) main_menu ;;
  esac
}

install_theme_prompt() {
  local url
  url=$(gum input --placeholder="Git repo URL for theme" --header="")
  if [[ -n "$url" ]]; then
    theme-install "$url"
  fi
}

remove_theme_prompt() {
  local theme
  theme=$(gum input --placeholder="Theme name" --header="")
  if [[ -n "$theme" ]]; then
    theme-remove "$theme"
  fi
}

ack_command() {
  gum spin --spinner "globe" --title "Done!" -- sleep 1
}

main_menu
